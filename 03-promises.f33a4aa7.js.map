{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAcA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACvC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAW,WACLN,GACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAEFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjB,OAAOb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAErEM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClB,OAAOb,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IA3BxDQ,SAASC,cAAc,SAE/BC,iBAAiB,UA6BxB,SAAyBC,GACvBA,EAAEC,iBAED,IAAIZ,EAAQa,OAAOF,EAAEG,cAAcd,MAAMe,OACrCC,EAAOH,OAAOF,EAAEG,cAAcE,KAAKD,OACnCE,EAASJ,OAAOF,EAAEG,cAAcG,OAAOF,OAE5C,KAAIf,GAAS,GAAKgB,GAAO,GAAKC,EAAS,GAMrC,OAAO9B,EAAAgB,OAAOe,QAAQ,kBALtB,IAAK,IAAInB,EAAW,EAAGA,GAAYkB,EAAQlB,GAAY,EACvDV,EAAcU,EAAUC,GACxBA,GAASgB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n  \nformEl.addEventListener('submit', onCreatePromise);\n// const makePromise = () => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => resolve(position), delay);\n//   });\n// }\n// makePromise()\n//   .than(result => console.log(result))\n//   .catch(error => console.log(error));\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } \n        reject({ position, delay })\n      \n    }, delay)\n  })\n    .then(({ position, delay }) => {\n      return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n}\nfunction onCreatePromise(e) {\n  e.preventDefault();\n\n   let delay = Number(e.currentTarget.delay.value);\n   let step = Number(e.currentTarget.step.value);\n   let amount = Number(e.currentTarget.amount.value);\n\n  if (delay >= 0 && step >=0 && amount > 0) {\n    for (let position = 1; position <= amount; position += 1 ){\n    createPromise(position, delay);\n    delay += step;\n  }\n  } else {\n    return Notify.warning('input value >0');\n  }\n  \n }"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","step","amount","warning"],"version":3,"file":"03-promises.f33a4aa7.js.map"}